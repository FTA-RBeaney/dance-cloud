import{e as t,a,g as e,d as s,f as o,i as n}from"../../../../runtime.mjs";import{z as m}from"../../../../_/index.mjs";import{s as r,h as c}from"../../../../_/blob.mjs";import{r as p}from"../../../../_/auth.mjs";import"../../../../virtual/_commonjsHelpers.mjs";import"../../../../_/pathe.ff20891b.mjs";const i=t((async t=>{await p(t),a("blob");const{pathname:i}=await e(t,m.object({pathname:m.string().min(1)}).parse),u=s(t),f=o(t,"content-type"),h=o(t,"content-length")||"0",j={...u};if(j.contentType||(j.contentType=f),j.contentLength||(j.contentLength=h),"string"==typeof j.customMetadata)try{j.customMetadata=JSON.parse(j.customMetadata)}catch(t){j.customMetadata={}}const b=n(t),d=await r(b,Number(h));return c().put(i,d,j)}));export{i as default};
//# sourceMappingURL=_...pathname_.put.mjs.map
